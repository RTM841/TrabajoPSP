/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.HiloControlador;
import Modelo.Cliente;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Pablo Alcudia
 */
public class VistaCliente extends javax.swing.JFrame {

    /**
     * Creates new form VistaCliente
     */
    String usuario = "";
    Cliente cliente = new Cliente();

    public String getUsuario() {
        return usuario;
    }

    public void setUsuario(String usuario) {
        this.usuario = usuario;
    }
    Date fechaHoy = new Date();
    
    public VistaCliente(String nombreUsuario) {
        initComponents();
        setLocationRelativeTo(null);
        
        
        usuario = nombreUsuario;
        
        jLabel1.setText("CLIENTE " + usuario.toUpperCase());
        
        jTACliente.setEditable(false);
        
        HiloControlador contr = new HiloControlador(this);
        contr.start(); //Iniciamos el hilo de recepcion de mensajes.
        
        appendTextArea("", "Sesion abierta a las: "+ fechaHoy.toString());
        
        //Mensaje para los clientes que esten conectado al server, para que visualize quien se ha unido.
        try {
            cliente.enviarMensaje(getUsuario() + ": " + "Connected"); 
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTACliente = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jTFMensajeUser = new javax.swing.JTextField();
        jBEnviar = new javax.swing.JButton();
        jBImagen = new javax.swing.JButton();
        jBCerrar = new javax.swing.JButton();
        jBDocumento = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTACliente.setColumns(20);
        jTACliente.setRows(5);
        jScrollPane1.setViewportView(jTACliente);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("CLIENTE");

        jBEnviar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBEnviar.setForeground(new java.awt.Color(0, 0, 255));
        jBEnviar.setText("Enviar Mensaje");
        jBEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEnviarActionPerformed(evt);
            }
        });

        jBImagen.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBImagen.setForeground(new java.awt.Color(0, 0, 255));
        jBImagen.setText("IMAGEN");
        jBImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImagenActionPerformed(evt);
            }
        });

        jBCerrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBCerrar.setText("CERRAR SESIÓN");
        jBCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCerrarActionPerformed(evt);
            }
        });

        jBDocumento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBDocumento.setForeground(new java.awt.Color(0, 0, 255));
        jBDocumento.setText("DOCUMENTO");
        jBDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDocumentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(jBCerrar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTFMensajeUser)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBDocumento))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBImagen)
                        .addGap(47, 47, 47)
                        .addComponent(jBDocumento)))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFMensajeUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBEnviar))
                .addGap(34, 34, 34)
                .addComponent(jBCerrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCerrarActionPerformed
       String mensaje = "disconnected";
        try {
            cliente.enviarMensaje(getUsuario() + ": " + mensaje); //Mensaje que se envia al servidor para que reparta a los clientes, el usuario que ha abandona la sesión.
        } catch (IOException ex) {
            Logger.getLogger(VistaCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();
    }//GEN-LAST:event_jBCerrarActionPerformed

    private void jBEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEnviarActionPerformed
        String mensaje = jTFMensajeUser.getText();
        //Comprobamos que se ha introduce algo en el textField.
        if (!mensaje.equalsIgnoreCase("")) {

            appendTextAreaYo("Yo", mensaje);

            try {
                cliente.enviarMensaje(getUsuario() + ": " + mensaje);
                jTFMensajeUser.setText("");
            } catch (IOException ex) {

            }
        }else{
            JOptionPane.showMessageDialog(this, "Escribe un mensaje, antes de enviar algo.");
        }

    }//GEN-LAST:event_jBEnviarActionPerformed

    private void jBImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImagenActionPerformed
        JFileChooser file=new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos PNG", "png");
        file.setFileFilter(filter);
        //file.showOpenDialog(this);
        // Mostrar el diálogo de selección de archivo
        int result = file.showOpenDialog(null);
        
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String rutaArchivo = selectedFile.getAbsolutePath();
            // Imprimir la ruta del archivo seleccionado
            jTFMensajeUser.setText(rutaArchivo);
        } else {
            JOptionPane.showMessageDialog(this, "El usuario canceló la operación");
        }
    }//GEN-LAST:event_jBImagenActionPerformed

    private void jBDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDocumentoActionPerformed
        JFileChooser file=new JFileChooser();
       FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos TXT", "txt");
        file.setFileFilter(filter);
        int result = file.showOpenDialog(null);
        
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String rutaArchivo = selectedFile.getAbsolutePath();
            // Imprimir la ruta del archivo seleccionado
            jTFMensajeUser.setText(rutaArchivo);
        } else {
            JOptionPane.showMessageDialog(this, "El usuario canceló la operación");
        }
    }//GEN-LAST:event_jBDocumentoActionPerformed
    
    //Metodo que se utiliza para añadir texto en mi textArea, de los demas clientes
    public void appendTextArea(String nombreCliente, String mensaje) {

        String textoAnterior = jTACliente.getText();
        String textoFinal = textoAnterior + "\n" + "-" + mensaje;
        jTACliente.setText(textoFinal);

    }

    //Metodo que se utiliza para añadir mi mensaje en el TextArea
    public void appendTextAreaYo(String nombreCliente, String mensaje) {

        String textoAnterior = jTACliente.getText();
        String textoFinal = textoAnterior + "\n" + nombreCliente + ": " + mensaje;
        jTACliente.setText(textoFinal);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaCliente("Pablo").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCerrar;
    private javax.swing.JButton jBDocumento;
    private javax.swing.JButton jBEnviar;
    private javax.swing.JButton jBImagen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTACliente;
    private javax.swing.JTextField jTFMensajeUser;
    // End of variables declaration//GEN-END:variables
}
